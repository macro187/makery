
--------------------------------------------------------------------------------
    Introduction
--------------------------------------------------------------------------------

    Support for compiling various kind of files into .resources files using
    the "Resbian" tool.  Also arranges for those .resources files to be
    linked into the final output binary.



--------------------------------------------------------------------------------
    Requirements
--------------------------------------------------------------------------------

    The Resbian tool is available as part of the "halfdecentsharp" tools and
    libraries at:

        http://github.com/macro187/halfdecentsharp



--------------------------------------------------------------------------------
    Convention Over Configuration
--------------------------------------------------------------------------------

    The localization classes in the .NET class library expect resources to
    be broken up by culture and by the .NET type they apply to, which means
    a separate embedded .resources file per culture/type combination.  In
    addition, the resource items themselves can be of different types (eg.
    strings, images, etc.).  The dotnet-resbian module handles this
    automatically by way of subdirectory and filename conventions.



--------------------------------------------------------------------------------
    Directory Convention
--------------------------------------------------------------------------------

    Resource source files are located in a directory structure under a
    /res subdirectory.

    Source files directly under that top-level resource directory apply to
    the so-called "neutral culture".  These are the "default" versions of
    resources used if a more culture-specific version doesn't exist.

    Under the top-level resource directory are additional subdirectories
    named according to culture code which contain versions of resources
    specific to that culture.



--------------------------------------------------------------------------------
    Filename Convention
--------------------------------------------------------------------------------

    The resource source files themselves adhere to the following naming
    pattern:

        [<Namespace>.][<SubNamespace>.]<TypeName>__<filename>

    If the project's assembly contains types in completely different
    namespaces, you can set your project's namespace to a blank string and
    include full namespaces here.  Otherwise, your project's namespace
    (which is, by default, the same as your project's directory name) is
    prepended for you, so you should not include it here.

    Specify <SubNamespace> if the type the resource applies to is in a
    sub-namespace of the project-wide namespace (which is the same as your
    project's directory name unless you've overridden it in your Makefile)

    <TypeName> is the name of the .NET type the resource is associated
    with

    <filename> depends on what type of resource(s) the file contains.
    <filename> patterns currently supported by the Resbian tool are:

    -   <name>.string.txt

        The entire contents of the file will be a single string resource
        named <name>.

    -   strings.txt

        A text file containing key-value pairs (the key on one line
        followed by the value on the next line followed by a blank
        line).  Each pair becomes a single string resource whose name is
        the key prefixed with "__".  The prefix is added because the
        keys are intended to be full, untranslated text.



--------------------------------------------------------------------------------
    Licence
--------------------------------------------------------------------------------

    Copyright (c) 2007, 2008, 2009, 2010, 2011, 2012
    Ron MacNeil <macro@hotmail.com>

    Permission to use, copy, modify, and distribute this software for any
    purpose with or without fee is hereby granted, provided that the above
    copyright notice and this permission notice appear in all copies.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


